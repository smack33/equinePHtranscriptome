#Update the base software
sudo apt-get update && \
sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \
        default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \
        python-matplotlib python-pip python-virtualenv sysstat fastqc \
        trimmomatic bowtie samtools blast2 wget bowtie2 openjdk-8-jre
 
#install khmer from its source code
	cd ~/
	python2.7 -m virtualenv pondenv
	source pondenv/bin/activate
	cd pondenv
	pip install -U setuptools
	git clone --branch v2.0 https://github.com/dib-lab/khmer.git
	cd khmer
	make install

#install Salmon
	cd 
	curl -LO https://github.com/COMBINE-lab/salmon/releases/download/v0.7.2/Salmon-0.7.2_linux_x86_64.tar.gz
	tar -xvzf Salmon-0.7.2_linux_x86_64.tar.gz
	cd Salmon*/bin
	echo export PATH=$PATH:$(pwd) >> ~/pondenv/bin/activate
	source ~/pondenv/bin/activate
  
 #folderstructure
 #/mnt/Chipperbucket
 #/mnt/work
 #/mnt/work/2010
 #/mnt/work/2015
  
#becasue we are using the Google bucket -- must mount EVERYTIME you restart the instance!!
	gcsfuse --implicit-dirs 2017_swidstorbucket /mnt/chipperbucket
 
#files within the bucket must be "simlinked" to your working directory
#2015/16 files copy all at once -- 2010/11 must be moved by directory
#2010/11: there are many levels of directories within the bucket, so we had to make sure to simlink JUST the files (problem with links when it is the directories that are linked)
  ln -s /mnt/chipperbucket/Lung\ Transcriptome\ 2010/Cheers\ 8-30-10/Cheers*.fastq.gz /mnt/work/2010

#2015/16
 ln -s /mnt/chipperbucket/USDA2015\ RNA\ sequencing/*.fastq.gz /mnt/work/2015
 
 #files need to be concatenated so that each horse will have a total of 8 files. 
cat Merry_2-9-11_CAGATC_L004_R2_001.fastq.gz Merry_2-9-11_CAGATC_L004_R2_002.fastq.gz Merry_2-9-11_CAGATC_L004_R2
_003.fastq.gz Merry_2-9-11_CAGATC_L004_R2_004.fastq.gz Merry_2-9-11_CAGATC_L004_R2_005.fastq.gz Merry_2-9-11_CAGATC_L004_R2_006.fastq.gz Merry_2
-9-11_CAGATC_L004_R2_007.fastq.gz Merry_2-9-11_CAGATC_L004_R2_008.fastq.gz Merry_2-9-11_CAGATC_L004_R2_009.fastq.gz Merry_2-9-11_CAGATC_L004_R2_
010.fastq.gz Merry_2-9-11_CAGATC_L004_R2_011.fastq.gz Merry_2-9-11_CAGATC_L004_R2_012.fastq.gz Merry_2-9-11_CAGATC_L004_R2_013.fastq.gz Merry_2-
9-11_CAGATC_L004_R2_014.fastq.gz Merry_2-9-11_CAGATC_L004_R2_015.fastq.gz > Merry_RM_L004_R2.fastq.gz

##run fastqc
fastqc *.fastq.gz

##view files with multiqc
multiqc .

#grab the correct Illumina Adapters
wget https://anonscm.debian.org/cgit/debian-med/trimmomatic.git/plain/adapters/TruSeq3-PE.fa
wget https://anonscm.debian.org/cgit/debian-med/trimmomatic.git/plain/adapters/TruSeq2-PE.fa
wget https://anonscm.debian.org/cgit/debian-med/trimmomatic.git/plain/adapters/TruSeq3-PE-2.fa

#concatenate into a single adapter file
  cat TruSeq2-PE.fa TruSeq3-PE.fa TruSeq3-PE-2.fa > all-adapters.fa

#trimmomatic using the concatenated adapters 
#tried first on one pair of reads
  TrimmomaticPE 1641-Chico-020216-RM_S2_L003_R1_001.fastq.gz 1641-Chico-020216-RM_S2_L003_R2_001.fastq.gz 1641-Chico-020216-RM_S2_L003_R 1_001.qc.fq.gz Chico_L003_R1_se 1641-Chico-020216-RM_S2_L003_R2_001.qc.fq.gz Chico_L003_R2_se ILLUMINACLIP:all-adapters:2:40:15

#trimmomatic for the whole set separated into 2010 and 2015

#2010

for filename in Cheers_R1*.fastq.gz
do
     # first, make the base by removing fastq.gz
     base=$(basename $filename .fastq.gz)
     echo $base

     # now, construct the R2 filename by replacing R1 with R2
     baseR2=${base/_R1_/_R2_}
     echo $baseR2

     # finally, run Trimmomatic
	 TrimmomaticPE ${base}.fastq.gz ${baseR2}.fastq.gz trimmed/2010/${base}.qc.fq.gz trimmed/2010/s1_se trimmed/2010/${baseR2}.qc.fq.gz trimmed/2010/s2_se ILLUMINACLIP:all-adapters.fa:2:40:15
     
     # save the orphans
     gzip -9c s1_se s2_se >> orphans.qc.fq.gz
     rm -f s1_se s2_se
done

#2015
rm -f orphans.qc.fq.gz
	
for filename in *_S*_R1_*.fastq.gz
do
     # first, make the base by removing fastq.gz
     base=$(basename $filename .fastq.gz)
     echo $base

     # now, construct the R2 filename by replacing R1 with R2
     baseR2=${base/_R1_/_R2_}
     echo $baseR2

     # finally, run Trimmomatic
	 TrimmomaticPE ${base}.fastq.gz ${baseR2}.fastq.gz trimmed/2015/${base}.qc.fq.gz trimmed/2015/s1_se trimmed/2015/${baseR2}.qc.fq.gz trimmed/2015/s2_se ILLUMINACLIP:all-adapters.fa:2:40:15
     
     # save the orphans
     gzip -9c s1_se s2_se >> orphans.qc.fq.gz
     rm -f s1_se s2_se
done

#orphans will be in the quality folder

#to look at sequence length
  grep -c '>' in.fasta

#to look at sequence length divided by 4 (won't be divisible by 4 if it is truncated)
	expr $(cat in.fasta | wc -l) / 4
  
#reevaluate with fastqc & multiqc
  fastqc *.pe.qc.fq.gz
  multiqc . 

#within /work
  mkdir -p quant
  cd quant
  source ~/pondenv/bin/activate
  
#soft link the quality trimmed files to the quant directory
  ln -s ../quality/trimmed/*R1*.qc.fq.gz .
  ln -s ../quality/trimmed/*R2*.qc.fq.gz .

#get reference transcriptome
  wget http://de.cyverse.org/dl/d/8D105FFF-C9E7-437F-8710-45FF0C98377D/refined.fasta

#build an index
  salmon index --index equine --transcripts refined.fasta --type quasi

#Run Salmon
source ~/pondenv/bin/activate
	for R1 in *R1*.qc.fq.gz
	do
	  sample=$(basename $R1 extract.qc.fq.gz)
	  echo sample is $sample, R1 is $R1
	  R2=${R1/R1/R2}
	  echo R2 is $R2
	  salmon quant -i equine -p 2 -l IU -1 <(gunzip -c $R1) -2 <(gunzip -c $R2) -o ${sample}quant
	done

#gather counts
curl -L -O https://raw.githubusercontent.com/dib-lab/eel-pond/master/gather-counts.py
python ./gather-counts.py


#run edgeR
install.packages.auto <- function(x) {
  x <- as.character(substitute(x))
  if(isTRUE(x %in% .packages(all.available=TRUE))) {
    eval(parse(text = sprintf("require(\"%s\")", x)))
  } else {
    #update.packages(ask= FALSE) #update installed packages.
    eval(parse(text = sprintf("install.packages(\"%s\", dependencies = TRUE,repos=structure(c(CRAN='https://cran.cnr.berkeley.edu/')))", x)))
  }
  if(isTRUE(x %in% .packages(all.available=TRUE))) {
    eval(parse(text = sprintf("require(\"%s\")", x)))
  } else {
    source("http://bioconductor.org/biocLite.R")
    #biocLite(character(), ask=FALSE) #update installed packages.
    eval(parse(text = sprintf("biocLite(\"%s\")", x)))
    eval(parse(text = sprintf("require(\"%s\")", x)))
  }
}
install.packages.auto("edgeR")

install.packages("locfit")

##### Script used for edgeR in NewGLMscript.R file

setwd("/mnt/work/quant")
files<-list.files(".","counts$")
counts<-readDGE(files)


ChicoRML003.lib<-1183298
ChicoRML004.lib<-1177476
ChicoDZL003.lib<-1269682
ChicoDZL004.lib<-1265697
BlueRML003.lib<-1306738
BlueRML004.lib<-1301592
BlueDZL003.lib<-1174157
BlueDZL004.lib<-1167877
CassieRML003.lib<-1309924
CassieRML004.lib<-1300490
CassieDZL003.lib<-1168711
CassieDZL004.lib<-1161671
GlitterRML003.lib<-1215854
GlitterRML004.lib<-1205711
GlitterDZL003.lib<-1141082
GlitterDZL004.lib<-1128104
CommancheRML003.lib<-1145861
CommancheRML004.lib<-1140020
CommancheDZL003.lib<-1253048
CommancheDZL004.lib<-1248591
SmokeyRML003.lib<-1291339
SmokeyRML004.lib<-1286626
SmokeyDZL005.lib<-1511929
SmokeyDZL003.lib<-604208
SmokeyDZL004.lib<-599096
ButrfngrRML003.lib<-1076226
ButrfngrRML004.lib<-1069355
ButrfngrDZL003.lib<-1180720
ButrfngrDZL004.lib<-1174764
KadenceRML003.lib<-1331540
KadenceRML004.lib<-1326400
KadenceDZL003.lib<-1459101
KadenceDZL 004.lib<-1454040
BuddyRML003.lib<-1631323
BuddyRML004.lib<-1623909
BuddyDZL003.lib<-1814335
BuddyDZL004.lib<-1802514
ChoiceDZL003.lib<-1138407
ChoiceDZL004.lib<-1132051
ChoiceRML003.lib<-1321582
ChoiceRML004.lib<-1314574
BabsDZL003.lib<-1323761
BabsDZL004.lib<-1313390
BabsRML003.lib<-1320966
BabsRML004.lib<-1311730
TootsDZL003.lib<-2494815
TootsDZL004.lib<-2482744
TootsRML003.lib<-1041658
TootsRML004.lib<-1032855

#print(data)
#head(data$counts)
#definegroup

group <- c("RM", "RM", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "RM", "RM", "DZ", "DZ", "RM", "RM") 

dge = DGEList(counts=counts, group=group)

# Filter out lowly expressed genes
# Criterion: normalized to counts per million, 6 or 7 reads per sample in 2 or more libraries per group

keep<-rowSums(cpm(dge)>1) >=2
dge <- dge[keep, , keep.lib.sizes=FALSE]
dge <- calcNormFactors(dge)

design<-model.matrix(~group)

# Estimate dispersion
library(locfit) # dependency not installed when edgeR was installed
dge <- estimateCommonDisp(dge,design)
dge <- estimateTagwiseDisp(dge)

## make an MA-plot of DZ vs RM 

et <- exactTest(dge, pair=c("DZ", "RM"))
etp <- topTags(et, sort.by="PValue", n=100000)

# output CSV for DZ/RM
write.csv(etp$table, "equinePH-edgeR-DZvRM.csv")


etp$table$logFC = -etp$table$logFC
pdf("equinePH-edgeR-MA-plot.pdf")
plot(
  etp$table$logCPM,
  etp$table$logFC,
  xlim=c(-3, 20), ylim=c(-12, 12), pch=20, cex=.3,
  col = ifelse( etp$table$FDR < .2, "red", "black" ) )
dev.off()

# plot MDS
labels=c("Chico_RM1", "Chico_RM2", "Chico_DZ1", "Chico_DZ2", "Blue_RM1", "Blue_RM2", "Blue_DZ1", "Blue_DZ2", 
"Cassie_RM1", "Cassie_RM2", "Cassie_DZ1", "Cassie_DZ2", "Glitter_RM1", "Glitter_RM2", "Glitter_DZ1", "Glitter_DZ2", "Commanche_RM1", 
"Commanche_RM2", "Commanche_DZ1", "Commanche_DZ2", "Smokey_RM1", "Smokey_RM2", "Smokey_DZ1", "Smokey_DZ2", "Smokey_DZ3", "Butrfngr_RM1", 
"Butrfngr_RM2", "Butrfngr_DZ1", "Butrfngr_DZ2", "Kadence_RM1", "Kadence_RM2", "Kadence_DZ1", "Kadence_DZ2", "Buddy_RM1", "Buddy_RM2", 
"Buddy_DZ1", "Choice_DZ1", "Choice_DZ2", "Choice_RM1", "Choice_RM2", "Babs_DZ1", "Babs_DZ2", "Babs_RM1", "Babs_RM2", "Toots_DZ1", "Toots_DZ2", "Toots_RM1", 
"Toots_RM2")


pdf("equinePH-edgeR-MDS.pdf")
plotMDS(dge, labels=labels)
dev.off()




